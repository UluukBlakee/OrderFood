@model OrderFood.ViewModels.LoginViewModel

@{
    ViewData["Title"] = "Login";
}

<h2 class="my-4">Вход в приложение</h2>
<div class="row">
    <div class="col-md-4">
        <form method="post" asp-controller="Account" asp-action="Login">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Email" class="control-label"></label>
                <input asp-for="Email" class="form-control" />
                <span asp-validation-for="Email" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Password" class="control-label"></label>
                <div class="input-group">
                    <input asp-for="Password" class="form-control password-input" />
                    <span class="input-group-text password-toggle">
                        <i class="fa fa-eye"></i>
                    </span>
                </div>
                <span asp-validation-for="Password" class="text-danger"></span>
            </div>
            <div class="form-group form-check">
                <input asp-for="RememberMe" class="form-check-input" />
                <label class="form-check-label" asp-for="RememberMe"></label>
            </div>
            <div class="form-group">
                <input type="submit" value="Войти" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        $(document).ready(function () {
            $('.password-toggle').click(function () {
                $(this).toggleClass('active');
                let type = $(this).hasClass('active') ? 'text' : 'password';
                $('.password-input').attr('type', type);
            });
        });
    </script>
}